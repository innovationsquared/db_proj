WEBVTT
Kind: captions
Language: en

00:00:17.100 --> 00:00:23.340
Hey, Vsauce. Michael here. Now, one of my favorite
treats of the holiday season is

00:00:23.350 --> 00:00:29.280
Gabriel's cake. It's a super solid
based on Gabriel's Horn that you can

00:00:29.280 --> 00:00:38.510
make right at home, as long as your home
is infinitely large. Okay, all right. Now, the

00:00:38.510 --> 00:00:44.660
first thing you want to do is bake a
cake. I prepared this cake earlier. It's a

00:00:44.660 --> 00:00:50.320
real beautiful cake. It's a little large,
but I bet you I could eat that whole

00:00:50.320 --> 00:00:57.320
thing in a day if I tried. Am I right?
Okay, now the second step is cut the cake in

00:00:57.320 --> 00:00:58.070
half.

00:00:58.070 --> 00:01:02.659
Notice that while I cut this cake in half

00:01:02.659 --> 00:01:08.120
you don't add or create any new cake but
the surface area of the cake has

00:01:08.120 --> 00:01:13.840
increased. It used to be completely
covered and now we've got two regions on

00:01:13.840 --> 00:01:19.090
the inside that aren't covered. The next
step is to cut this half, one of the halves,

00:01:19.090 --> 00:01:20.409
in half.

00:01:20.409 --> 00:01:25.880
Here we go. Again, the volume of cake on
the table is the same as it was in the

00:01:25.880 --> 00:01:30.750
beginning but the surface area is going
up. As you may be able to guess, the next

00:01:30.750 --> 00:01:36.110
step is going to be to cut one of these
quarters of the original cake in half.

00:01:38.400 --> 00:01:44.860
It's getting pretty thin, but all you have to
do is keep this up - cutting halves in half

00:01:44.860 --> 00:01:49.979
and half and half and half forever and
once you've done that, well, you're almost

00:01:49.979 --> 00:01:55.490
there. When you finish cutting, stack the
halves on top of one another in order,

00:01:55.490 --> 00:02:00.770
like this, to create a beautiful tiered
dessert. Because you have an infinite

00:02:00.770 --> 00:02:05.380
number of thinner and thinner slices
when you're done stacking them the cake's

00:02:05.380 --> 00:02:10.009
vertical height will be endless.
Such a cake has an interesting

00:02:10.009 --> 00:02:17.250
mathematical property. Its volume, the
amount of cake it contains, is clearly no

00:02:17.250 --> 00:02:23.650
different than the amount you started
with, but its surface area is infinite. It's

00:02:23.650 --> 00:02:29.819
a cake you can eat but not frost.
You would need an infinite amount of frosting

00:02:29.819 --> 00:02:35.379
to cover the whole thing with a uniform
coat. An object with finite volume but

00:02:35.379 --> 00:02:40.010
infinite surface area doesn't need to
be endlessly tall, by the way. There are

00:02:40.010 --> 00:02:45.280
bounded super solids, like this cube,
with an infinite number of smaller and

00:02:45.280 --> 00:02:50.560
smaller circular holes.
Of course, building these objects in the real world

00:02:50.560 --> 00:02:56.280
comes with some obvious difficulties.
One is the fact that the amount of steps

00:02:56.280 --> 00:03:01.469
required to complete the construction of
Gabriel's cake or any other super solid

00:03:01.469 --> 00:03:08.069
is literally infinitely many.
And infinity isn't a number that, you know,

00:03:08.069 --> 00:03:15.669
you eventually get to.
It means unending. There will always be a next step,

00:03:15.669 --> 00:03:21.090
another piece to slice in half again.
By definition, an infinite sequence of tasks

00:03:21.090 --> 00:03:27.370
has no last task. So you could never
finish making a super solid.

00:03:29.440 --> 00:03:30.420
Or could you?

00:03:31.480 --> 00:03:33.940
Enter the Supertask.

00:03:39.700 --> 00:03:44.440
What if instead of taking the same
amount of time to complete each step we

00:03:44.450 --> 00:03:50.570
accelerated as we worked and did each
step in half the time as the last? For

00:03:50.570 --> 00:03:54.660
example, let's say you wanna make
Gabriel's cake in just two minutes.

00:03:54.660 --> 00:04:00.320
That's easy. First, cut the original
cake in half and then wait a minute

00:04:00.320 --> 00:04:06.110
before making the second cut. Wait half a minute before making the third, a quarter of a minute

00:04:06.110 --> 00:04:11.220
before the 4th and so on.
Always waiting for half of what's left to pass

00:04:11.220 --> 00:04:17.530
before cutting again. Since you can keep
dividing in half forever, there will

00:04:17.530 --> 00:04:25.160
always be another step. Infinite actions
within a finite amount of time is a

00:04:25.160 --> 00:04:30.260
supertask. The strange thing, of course,
is that while supertasking no matter

00:04:30.260 --> 00:04:35.300
how many steps you've already completed
there will always be an infinite amount

00:04:35.300 --> 00:04:43.710
of steps ahead. But yet, when time's up,
you will have finished all of them. What

00:04:43.710 --> 00:04:49.360
we've just described is similar to Zeno's
famous paradox of the dichotomy in which

00:04:49.360 --> 00:04:54.700
the Greek hero Achilles runs a short race
that he can clearly finish,

00:04:54.700 --> 00:05:00.480
I mean, people finish races all the time,
but how exactly it's finished

00:05:00.480 --> 00:05:06.760
is a mystery. Because first Achilles must
cover half of the race's distance and

00:05:06.760 --> 00:05:10.520
then half of what's left and half again
and again and again. Since there will

00:05:10.520 --> 00:05:14.180
always be another half way point to
reach, the number of subdivisions

00:05:14.180 --> 00:05:21.400
infinite, there is no final destination,
after which Achilles' next stop is the

00:05:21.400 --> 00:05:22.360
finish line.

00:05:22.360 --> 00:05:28.830
But yet Achilles obviously can finish.
He somehow reaches them all despite the

00:05:28.830 --> 00:05:34.150
fact that during his journey he always
has an infinite number of steps left to

00:05:34.150 --> 00:05:41.050
reach. Think about it this way.
What if at each half way step along the way

00:05:41.050 --> 00:05:46.539
Achilles is required to hold up a flag.
At even steps a blue flag and at odd

00:05:46.539 --> 00:05:52.189
steps a red flag. Blue, red, blue, red,
blue, red, the flags will alternate faster

00:05:52.189 --> 00:05:58.430
and faster. But when Achilles finishes
the race, which flag will he be holding

00:05:58.430 --> 00:06:04.520
up? To be holding up either flag would
seem to suggest that a largest number

00:06:04.520 --> 00:06:11.419
not only exists, but is either even or
odd. Now, to this it is often suggested

00:06:11.419 --> 00:06:16.469
that the real problem here is that Achilles
isn't actually doing infinitely

00:06:16.469 --> 00:06:20.849
many things.
He's just taking a few strides or whatever.

00:06:20.849 --> 00:06:27.550
A true supertask requires doing
infinitely many distinct actions. Fair

00:06:27.550 --> 00:06:33.219
enough. But even if Achilles ran the
race in a staccato fashion, stopping at each

00:06:33.219 --> 00:06:37.860
half way point for half as long as he waited
to the last one, the scenario would still

00:06:37.860 --> 00:06:43.789
be sensical and logical and would
complete in a finite amount of time. It

00:06:43.789 --> 00:06:48.349
has even been shown how a staccato
runner could move to avoid discontinuous

00:06:48.349 --> 00:06:52.900
velocities and accelerations.
The point is, fine,

00:06:52.900 --> 00:06:58.909
infinite distinct actions are at least
logically possible to do in a finite

00:06:58.909 --> 00:07:05.069
amount of time, but only logically.
Only as a mathematical abstraction.

00:07:05.069 --> 00:07:11.220
Supertasks are obviously just products of our
imagination. Because in the real world

00:07:11.240 --> 00:07:17.360
there must be some smallest amount of
space and/or time that cannot be

00:07:17.360 --> 00:07:22.589
meaningfully divided in half again.
Once you're within one of these distances of

00:07:22.589 --> 00:07:23.819
the finish line,

00:07:23.819 --> 00:07:27.900
the only possible next position you can have is the

00:07:27.900 --> 00:07:34.009
finish line. That certainly seems fair.
After all, it's believed that in reality

00:07:34.009 --> 00:07:40.070
there is a smallest meaningful distance - the Planck length. Any interactions

00:07:40.070 --> 00:07:46.080
between or observations of particles
more accurate than this span make no

00:07:46.080 --> 00:07:51.910
sense within physics as we understand it
today. And the time it would take to

00:07:51.910 --> 00:07:57.300
travel a Planck length at the fastest
speed possible, the speed of light, is the

00:07:57.300 --> 00:08:03.690
Planck time. So these seem to be the
briefest pieces of space and time any

00:08:03.690 --> 00:08:09.870
known force in the universe could act
across. Whether that force is gravity or a

00:08:09.870 --> 00:08:16.510
force from Achilles' leg muscles.
But does that resolve the crisis or is it

00:08:16.510 --> 00:08:20.330
just a way of avoiding the problem
altogether by saying "it doesn't matter,

00:08:20.330 --> 00:08:24.990
because it won't be on the test?"
As John Earman has complained, it seems to

00:08:24.990 --> 00:08:29.880
me unattractive to make the truth of
mathematical statements depend on the

00:08:29.880 --> 00:08:36.860
contingencies of space-time structure.
Maybe Zeno's dichotomy tells us less

00:08:36.860 --> 00:08:42.029
about motion and time and space and truth
than it does about our impressive

00:08:42.029 --> 00:08:49.470
abilities to confuse ourselves.
And that's what makes supertasks important.

00:08:49.470 --> 00:08:56.330
They're a contact point in uneasy
handshake of sorts between the universe we live

00:08:56.330 --> 00:09:02.730
in and the brains inside us.
Let's play around with some. They're not all the

00:09:02.730 --> 00:09:08.779
same. Some converge, like Zeno's dichotomy,
others converge but in ways you may not

00:09:08.779 --> 00:09:15.039
expect and still others refuse to
cooperate in any way. They diverge.

00:09:18.550 --> 00:09:24.510
A great example of a supertask whose
behavior diverges is Thomson's lamp, a

00:09:24.510 --> 00:09:28.769
famous supertask devised by James F. Thomson.

00:09:28.769 --> 00:09:35.459
Imagine a lamp that can be turned on and
off as quickly as you desire. What would

00:09:35.459 --> 00:09:42.329
happen if you turned such a lamp on and
off Zenoianly? Well, let's find out. Just set a

00:09:42.329 --> 00:09:50.179
timer and turn the lamp on. Then wait
one minute and turn it off. After half a

00:09:50.179 --> 00:09:54.939
minute turn it back on and then off
again after a quarter of a minute, on

00:09:54.939 --> 00:09:58.019
again after an eighth of a minute and so on.

00:09:58.019 --> 00:10:02.699
Waiting half as long to flip the switch
each time as you previously did. Now, as the

00:10:02.699 --> 00:10:07.730
number of switching grows without bound,
the total time elapsed approaches just

00:10:07.730 --> 00:10:13.920
two minutes. The lamp will be turned on
and off an infinite number of times in

00:10:13.920 --> 00:10:21.239
just two minutes.
So after two minutes, will the lamp be on or off?

00:10:21.239 --> 00:10:28.069
Well, by the definition of infinity,
there is no last step. There is never a

00:10:28.069 --> 00:10:34.910
switching not followed by another.
So the lamp can't be on, because whenever it's

00:10:34.910 --> 00:10:40.149
turned on, it is immediately turned off
in the next step and it can't be off

00:10:40.149 --> 00:10:44.480
because whenever it's turned off it's
turned on right afterwards. What's the

00:10:44.480 --> 00:10:49.970
answer? It's easy to say something about
a supertask when its partial sums

00:10:49.970 --> 00:10:56.450
converge, but when they just oscillate back
and forth forever... Hmmmm...

00:10:58.480 --> 00:11:05.079
Zeno objects do this. Imagine building a meter
high cube. As with all supertasks, you

00:11:05.079 --> 00:11:11.100
construct at an accelerated pace.
First, you put down a green half metre tall slab,

00:11:11.100 --> 00:11:17.079
then a quarter metre tall slab that's
orange, then a green eight metre slab,

00:11:17.079 --> 00:11:21.980
then an orange 16th meter slab and so on,
until there are infinitely many layers

00:11:21.980 --> 00:11:28.339
of alternating color. Now, when you look at the cube from above, what color will

00:11:28.339 --> 00:11:29.200
you see?

00:11:29.200 --> 00:11:35.710
Orange, green? Well, it can't be orange
because every orange layer is covered by

00:11:35.710 --> 00:11:38.910
a green one. And it can't be green
because every green layer is blocked by

00:11:38.910 --> 00:11:45.080
an orange one above it. What if we had a
machine display each digit of Pi

00:11:45.080 --> 00:11:50.390
in order at a supertask pace? After its
finite runtime, what would be on the

00:11:50.390 --> 00:11:53.100
screen?
The last digit of Pi?

00:11:53.100 --> 00:11:58.600
Well, that's impossible, right? But how could it be anything else? A supertask allows us

00:11:58.600 --> 00:12:01.220
to exhaust an infinite sequence.

00:12:01.990 --> 00:12:07.960
Paul Benacerraf delivered what is often considered the
best response to these confusions. Is

00:12:07.960 --> 00:12:10.530
Thomson's lamp on or off?

00:12:10.530 --> 00:12:17.410
Is the cube orange or green? The answer
is we don't know, because these questions

00:12:17.410 --> 00:12:24.230
are incomplete. Thomson's lamp could be
on or off or broken. The cube could

00:12:24.240 --> 00:12:30.190
appear orange or green or something else.
But the supertasks, as stated, don't let

00:12:30.190 --> 00:12:35.410
us figure out which. I may as well ask
you if a lamp hidden in a locked room

00:12:35.410 --> 00:12:40.890
is on or off. It's definitely one or the other,
but I haven't given you enough information

00:12:40.890 --> 00:12:47.320
to do anything but guess. Supertasks like
these describe an endless sequence of

00:12:47.320 --> 00:12:53.150
tasks and then ask us about the end.
But we can't determine an outcome because,

00:12:53.150 --> 00:12:57.790
although there may be an end to their
duration, there is no end,

00:12:57.790 --> 00:13:04.190
no final member of their actions.
They must be reworded or coupled with extra

00:13:04.190 --> 00:13:09.690
assumptions in order to be solved.
For example, if we assume that the switch

00:13:09.690 --> 00:13:16.030
used on Thomson's lamp can only be all
the way on or all the way off, we can't

00:13:16.030 --> 00:13:22.150
determine where it is after the supertask.
But if the switch is, say, a

00:13:22.150 --> 00:13:26.660
bouncing ball that completes the circuit
turning the lamp on each time it bounces

00:13:26.660 --> 00:13:31.970
on a metal plate, an outcome can be
determined. If the physics here are ideal

00:13:31.970 --> 00:13:35.480
and the ball bounces half as high and
half the time as it did on

00:13:35.480 --> 00:13:40.410
the previous balance, its sequence of
bounce heights will turn the lamp on and

00:13:40.410 --> 00:13:45.829
off an infinite number of times in a
finite amount of time. Although this

00:13:45.829 --> 00:13:52.639
bouncing ball has no penultimate state,
no second-to-last bounce, it does have an

00:13:52.639 --> 00:13:55.870
ultimate state, a final one,

00:13:55.870 --> 00:14:03.220
resting on the plate. The circuit will be
complete and the lamp will be on. You can

00:14:03.220 --> 00:14:06.900
also describe a switch on Thomson's lamp that leaves it off.

00:14:09.460 --> 00:14:10.440
Sometimes, the

00:14:10.440 --> 00:14:14.899
next state after infinitely many isn't
paradoxical because of lack of

00:14:14.899 --> 00:14:20.810
information, but because of a surprising,
or non-intuitive, discontinuity that

00:14:20.810 --> 00:14:26.529
occurs there. The Ross–Littlewood paradox
is one of the greatest examples. Imagine

00:14:26.529 --> 00:14:32.519
a giant urn that can hold an unlimited
number of balls. Now, imagine that you

00:14:32.519 --> 00:14:38.500
have an unlimited supply of balls, each
with a unique natural number written on

00:14:38.500 --> 00:14:42.949
it. All natural numbers, in fact, since
there's no end to how many balls you

00:14:42.949 --> 00:14:48.790
have. Now, working at an accelerated Zenoian pace you move the balls to the urn

00:14:48.790 --> 00:14:50.690
10 at a time,

00:14:50.690 --> 00:14:56.840
but in a weird way. At step one, you place
balls number 1 to 10 in the urn, but

00:14:56.840 --> 00:15:02.780
remove number 1. At step two, a minute
later, you place balls 11 to 20 in the

00:15:02.780 --> 00:15:09.260
urn and remove ball number 2. At step three,
you place balls 21 to 30 in the urn

00:15:09.260 --> 00:15:12.370
and remove ball 3, and so on.

00:15:12.370 --> 00:15:19.160
Upon the completion of the supertask
how many balls will be in the urn? At

00:15:19.160 --> 00:15:24.080
first the answer seems obvious. At each
step you are adding 10 balls and

00:15:24.080 --> 00:15:28.680
subtracting 1, so a net of nine balls
is added each time.

00:15:28.680 --> 00:15:33.890
9 + 9 + 9 + 9 forever, the series grows without end.

00:15:33.890 --> 00:15:40.420
Infinite nine's means infinite balls at
the end. But here's the problem. At each

00:15:40.420 --> 00:15:46.920
step, the ball with that step's number
written on it is removed. Ball 1 is

00:15:46.920 --> 00:15:53.170
removed at step one, ball 2 was removed
at step two, ball 12-googol is removed at

00:15:53.170 --> 00:15:59.010
step twelve-googol. Since there are an
endless number of steps for any ball

00:15:59.010 --> 00:16:05.510
number, there is a step number at which
it is removed. So although the urn's ball

00:16:05.510 --> 00:16:11.680
population grows without bound during
the task, after the supertask the

00:16:11.680 --> 00:16:14.529
number drops to 0.

00:16:15.320 --> 00:16:20.860
It gets weirder. Here's a second, seemingly identical
method. Instead of beginning with balls

00:16:20.870 --> 00:16:27.149
1 to 10 and then removing 1, begin with
balls 1 to 9. Then write

00:16:27.149 --> 00:16:36.040
zero after the "1" on ball 1. For step two, add balls 11 to 19 and draw a zero on ball 2, making it

00:16:36.040 --> 00:16:43.749
say 20. For every finite step, both methods
results in identical earned contents, but

00:16:43.749 --> 00:16:50.329
after infinitely many steps, the first
leaves us with no balls and the second

00:16:50.329 --> 00:16:54.829
leaves us with infinitely many balls
written on which are all the natural

00:16:54.829 --> 00:17:00.930
numbers, each followed by an infinite
string of zeros. Both are discontinuous

00:17:00.930 --> 00:17:10.659
at infinity, but dang, in very different ways.
The bigger question now becomes, "so

00:17:10.659 --> 00:17:16.929
what? Who cares?" You will never have an
infinite number of balls and you will

00:17:16.929 --> 00:17:21.669
never have a large enough to urn to
hold all of them. You will never build a

00:17:21.669 --> 00:17:23.490
lamp that can turn on and off

00:17:23.490 --> 00:17:29.530
arbitrarily fast. We cannot investigate
time or space past a certain smallness,

00:17:29.530 --> 00:17:35.649
except when pretending, so what are supertasks, but recreational fictions,

00:17:35.649 --> 00:17:43.209
entertaining riddles? We can ask more
questions than we can answer, so what?

00:17:43.209 --> 00:17:44.740
Well, here's what.

00:17:44.750 --> 00:17:51.660
Neanderthals. Neanderthals and humans, us,
Homo sapiens, lived together in Europe

00:17:51.660 --> 00:17:57.770
for at least five thousand years.
Neanderthals were strong and clever, they

00:17:57.770 --> 00:18:03.280
may have even intentionally buried their
dead, but for hundreds of thousands of

00:18:03.280 --> 00:18:06.230
years, Neanderthals barely

00:18:06.230 --> 00:18:12.910
went anywhere. They pretty much just explored
and spread until they reached water or

00:18:12.910 --> 00:18:19.300
some other obstacle and then stopped.
Homo sapiens, on the other hand, didn't do

00:18:19.300 --> 00:18:24.480
that. They did things that make no sense
crossing terrain and water without

00:18:24.480 --> 00:18:29.920
knowing what lay ahead. Svante Pääbo has
worked on the Neanderthal genome at the

00:18:29.920 --> 00:18:34.960
Max Planck Institute for Evolutionary Anthropology
and he points out that

00:18:34.960 --> 00:18:41.880
technology alone didn't allow humans to go to
Madagascar, to Australia. Neanderthals

00:18:41.880 --> 00:18:49.810
built boats too. Instead, he says, there's
"some madness there. How many people

00:18:49.810 --> 00:18:55.170
must have sailed out and vanished on the
Pacific before you found Easter Island? I

00:18:55.170 --> 00:19:01.820
mean, it's ridiculous. And why do you do
that? Is it for the glory? For immortality?

00:19:01.820 --> 00:19:13.580
For curiosity? And now we go to Mars. We
never stop." It's ridiculous, foolish, maybe?

00:19:13.580 --> 00:19:20.200
But it was the Neanderthals who went
extinct, not the humans. Maybe it's only a

00:19:20.200 --> 00:19:25.940
fool who will perilously journey out to
what might not be there. And maybe it's

00:19:25.940 --> 00:19:31.930
only a fool who will ask about supertasks,
about infinity. But if you want to

00:19:31.930 --> 00:19:36.430
solve problems, you don't just solve the
ones that are there, you find more and

00:19:36.430 --> 00:19:42.100
make more and go after the impossible
ones; fostering a love and obsession with

00:19:42.100 --> 00:19:43.040
problems

00:19:43.040 --> 00:19:46.380
is how you solve problems.

00:19:46.380 --> 00:19:51.179
Antoine de Saint-Exupéry wasn't a
mathematician, but his advice

00:19:51.179 --> 00:19:57.990
fits nicely here. If you want to build a
ship, don't drum up people to collect

00:19:57.990 --> 00:20:03.950
wood and don't assign them tasks and work,
but rather teach them to long for the

00:20:03.950 --> 00:20:07.230
endless immensity of the sea.

00:20:07.840 --> 00:20:09.280
And as always,

00:20:09.280 --> 00:20:10.600
thanks for watching.

00:20:33.560 --> 00:20:40.100
Supertasks are cool, but super gifts are
even cooler. That's why I'm excited to

00:20:40.110 --> 00:20:44.610
announce this year's Vsauce holiday
box. This thing comes loaded with

00:20:44.610 --> 00:20:50.440
exclusive Vsauce stuff and science gear,
plus all Vsauce proceeds go directly to

00:20:50.440 --> 00:20:54.150
Alzheimer's research. I'm really proud of
this box. You can pick one up at

00:20:54.150 --> 00:20:58.010
geekfuel.com/Vsauce,
link down in the description.

00:20:58.010 --> 00:21:01.270
There's a limited amount available, so
don't hesitate.

00:21:01.440 --> 00:21:02.480
And as always,

00:21:02.480 --> 00:21:03.560
thanks for watching.

