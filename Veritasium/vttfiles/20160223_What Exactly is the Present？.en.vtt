WEBVTT
Kind: captions
Language: en

00:00:02.180 --> 00:00:08.420
At the 1939 world's fair in New York, the exciting new tech was the live television broadcast.

00:00:08.700 --> 00:00:12.640
Roosevelt became the first president to address the nation live on TV

00:00:12.640 --> 00:00:17.920
But for years leading up to this event, engineers have been working on one particular technical problem:

00:00:17.920 --> 00:00:22.740
How to ensure the audio and video remain perfectly synced during the live broadcast ?

00:00:23.140 --> 00:00:28.800
Without this, words and lip movements wouldn't match up, which would be annoying and distracting for viewers.

00:00:28.800 --> 00:00:30.560
So, how did they do it ?

00:00:30.560 --> 00:00:32.400
Well actually, they didn't,

00:00:32.400 --> 00:00:34.780
instead they discovered something pretty incredible:

00:00:34.780 --> 00:00:39.040
We are not very good at discerning whether audio and video are in sync

00:00:39.040 --> 00:00:43.600
For example, I intentionally delayed the audio of this entire monolog

00:00:43.600 --> 00:00:45.180
nearly a 1/10th of a second

00:00:45.180 --> 00:00:46.440
and did you notice?

00:00:46.440 --> 00:00:48.580
I'll clap to make it more obvious.

00:00:53.320 --> 00:00:57.720
The engineers also found that there's an asymmetry in our tolerance for this misalignment,

00:00:57.720 --> 00:01:01.720
we don't really notice if a sound lags video by up to 125 milliseconds

00:01:01.720 --> 00:01:06.140
but we can tell something is wrong if it's leading the video by more than 45 milliseconds.

00:01:06.140 --> 00:01:08.140
And to understand why, take a look at this:

00:01:08.140 --> 00:01:11.620
Here I am bouncing a basketball as I walk away from the camera.

00:01:11.740 --> 00:01:14.620
The sight and the sound of the bounces match up perfectly;

00:01:14.680 --> 00:01:21.040
but as I walk away, you know the sound will be increasingly delayed due to the extra time it takes the sound

00:01:21.080 --> 00:01:23.920
to reach the camera, but the sounds still appears synced.

00:01:23.920 --> 00:01:29.820
This is because your brain is not reporting to you each instance exactly as it happens, but rather a short interval

00:01:29.820 --> 00:01:33.720
of time reorganised to make sense, so in this case

00:01:33.720 --> 00:01:36.100
your brain automatically aligns the sound with

00:01:36.100 --> 00:01:37.480
the sight of the bounce.

00:01:37.480 --> 00:01:39.420
At least, up to a point.

00:01:39.440 --> 00:01:43.840
Once i'm over 30 meters away, the sound is now delayed by over 100 milliseconds

00:01:43.840 --> 00:01:47.580
and your brain no longer integrates the information from your eyes and ears.

00:01:47.580 --> 00:01:52.700
Here, let me play the actual sound of the bounce together with the sound as received by the camera.

00:01:58.160 --> 00:02:02.240
This explains why sound can lag video by more than it can lead.

00:02:02.380 --> 00:02:08.080
I mean imagine you were at a basketball game, and because of how far away you're sitting, the sound is delayed.

00:02:08.080 --> 00:02:09.860
Your brain can handle that.

00:02:09.860 --> 00:02:12.600
but if the sound precedes the sight of an event

00:02:12.740 --> 00:02:14.880
that would look really odd

00:02:14.880 --> 00:02:18.260
because that's something that would never happen in nature.

00:02:18.260 --> 00:02:23.120
This is why the broadcast guidelines for acceptable audio and video mismatches

00:02:23.120 --> 00:02:26.760
are skewed in favour of audio lagging behind the video,

00:02:26.760 --> 00:02:30.800
our brains are good at aligning audio with the vision that preceded it.

00:02:30.800 --> 00:02:36.440
We can actually exploit our audio-syncing-capabilities to produce some strange results

00:02:36.440 --> 00:02:38.860
for example, we created this computer program

00:02:38.860 --> 00:02:42.760
where when you press the space bar a light appears on the screen.

00:02:43.000 --> 00:02:44.580
But not immediately,

00:02:44.580 --> 00:02:48.860
there is an 80ms delay between the button push and the light coming on.

00:02:48.860 --> 00:02:53.220
In a study participants who familiarised themselves with a similar program

00:02:53.220 --> 00:02:56.940
came to believe that the light turned on immediately after they pushed the button,

00:02:56.940 --> 00:03:00.440
just as our brains sychronized the sight and sound of the basketball bounce

00:03:00.480 --> 00:03:02.300
Press the space key once to begin

00:03:03.200 --> 00:03:05.240
This is just the section where you get the idea of what it does,

00:03:05.240 --> 00:03:06.060
so you push the spacebar

00:03:06.780 --> 00:03:09.200
Now watch what happens when you remove the delay.

00:03:09.320 --> 00:03:12.240
That last one came up without me even pressing anything!

00:03:12.240 --> 00:03:14.620
You didn't press anything and it just flashed up there?

00:03:14.620 --> 00:03:15.120
Right!

00:03:15.120 --> 00:03:17.200
Some participants were convinced that the light

00:03:17.200 --> 00:03:19.220
came on before they pushed the button.

00:03:19.880 --> 00:03:22.400
They believed that something else caused the light to come on,

00:03:22.400 --> 00:03:25.100
even though it was their action that made it happen.

